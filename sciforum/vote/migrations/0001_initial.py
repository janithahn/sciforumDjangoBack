# Generated by Django 3.0.5 on 2021-01-28 07:56

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('post', '0002_postimages'),
        ('answer', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('comment', '0009_auto_20210124_1358'),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='CommentVote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('voteType', models.CharField(choices=[('EMPTY', 'Empty'), ('LIKE', 'Like'), ('DISLIKE', 'Dislike')], default='EMPTY', max_length=10)),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('object_id', models.PositiveIntegerField()),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PostVote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('voteType', models.CharField(choices=[('EMPTY', 'Empty'), ('LIKE', 'Like'), ('DISLIKE', 'Dislike')], default='EMPTY', max_length=10)),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='post.Post')),
            ],
            options={
                'unique_together': {('post', 'owner')},
            },
        ),
        migrations.CreateModel(
            name='PostCommentVote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('voteType', models.CharField(choices=[('EMPTY', 'Empty'), ('LIKE', 'Like'), ('DISLIKE', 'Dislike')], default='EMPTY', max_length=10)),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('comment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='comment.PostComment')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('comment', 'owner')},
            },
        ),
        migrations.CreateModel(
            name='AnswerVote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('voteType', models.CharField(choices=[('EMPTY', 'Empty'), ('LIKE', 'Like'), ('DISLIKE', 'Dislike')], default='EMPTY', max_length=10)),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('answer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='answer.Answer')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('answer', 'owner')},
            },
        ),
        migrations.CreateModel(
            name='AnswerCommentVote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('voteType', models.CharField(choices=[('EMPTY', 'Empty'), ('LIKE', 'Like'), ('DISLIKE', 'Dislike')], default='EMPTY', max_length=10)),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('comment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='comment.AnswerComment')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('comment', 'owner')},
            },
        ),
    ]
